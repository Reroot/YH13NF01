What is the purpose of callback function as an argument of setState()?

Let's us know the componet finished rendering.
To check that the state has been rendered, the call back is used for any post action.

Note: It is recommended to use lifecycle method rather than this callback function.

setState({ name: 'John' }, () => console.log('The name has updated and component re-rendered'))

>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
What is the difference between HTML and React event handling?
--i
HTML handeling 
<button onclick='somefunc()'></button>

React handeling

<button onClick={somefunc}></button>

--ii
In HTML, you can return false to prevent default behavior:
<a href='#' onclick='console.log("The link was clicked."); return false;' />
Whereas in React you must call preventDefault() explicitly:

function handleClick(event) {
  event.preventDefault()
  console.log('The link was clicked.')
}

--iii
In HTML, you need to invoke the function by appending () 
Whereas in react you should not append () with the function name. 
(refer "activateLasers" function in the first point for example)
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
